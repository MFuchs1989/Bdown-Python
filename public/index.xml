<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael Fuchs Python</title>
    <link>/</link>
    <description>Recent content on Michael Fuchs Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Management</title>
      <link>/2019/04/16/data-management/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/16/data-management/</guid>
      <description>Table of Content1 Introduction2 Join the two dataframes along rows3 Merge two dataframes3.1 Merge with inner join3.2 Merge with outer join4 Merge multiple data frames4.1 Preparation4.2 Merge up to 3 data frames4.3 Merge more than 3 data frames5 Conclusion1 IntroductionOne of the essential skills of a data scientist is to generate and bring together data from different sources.</description>
    </item>
    
    <item>
      <title>Python&#39;s Pipe - Operator</title>
      <link>/2019/04/04/python-s-pipe-operator/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/04/python-s-pipe-operator/</guid>
      <description>Table of Content1 Introduction2 Python’s Pipe - Operator like R’s %&amp;gt;%2.1 Filter and select2.2 Multiple filter and select2.3 Sample and sort2.4 Multiple group by and summarize2.5 Group by and multiple summarize3 Conclusion1 IntroductionAnyone who has ever worked with R probably knows the very useful pipe operator %&amp;gt;%. Python also has a similar one that will be presented in different versions below.</description>
    </item>
    
    <item>
      <title>String Manipulation. An intuition.</title>
      <link>/2019/03/27/string-manipulation-an-intuition/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/27/string-manipulation-an-intuition/</guid>
      <description>Table of Content1 Introduction2 Separate2.1 via map - function2.2 via string function3 Unite3.1 two columns3.2 three and more columns4 add_prefix5 add_suffix6 Conclusion1 IntroductionIt happens again and again that in the course of the planned analysis text variables are unfavorably filled and therefore have to be changed. Here are some useful build in methods for string manipulation from Python.</description>
    </item>
    
    <item>
      <title>Dealing with missing values</title>
      <link>/2019/03/18/dealing-with-missing-values/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/18/dealing-with-missing-values/</guid>
      <description>Table of Content1 Introduction2 Checking for missing values3 Deletion of missing values4 Replace missings with values4.1 Variant 14.2 Variant 25 Replace values with missings5.1 Variant 15.2 Variant 26 Further imputations6.1 with mean6.2 with ffill6.3 with backfill7 Conclusion1 IntroductionIn the real world, there is virtually no record that has no missing values. Dealing with missing values can be done differently.</description>
    </item>
    
    <item>
      <title>Data Manipulation</title>
      <link>/2019/03/12/data-manipulation/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/12/data-manipulation/</guid>
      <description>Table of Content1 Introduction2 Index2.1 Resetting index2.2 Resetting multiindex2.3 Setting index3 Modifying Columns3.1 Rename Columns3.1.1 add_prefix3.3 Add columns3.4 Drop and Delete Columns3.5 Insert Columns3.6 Rearrange Columns4 Modifying Rows4.1 Round each column4.2 Round columns differently within a df5 Replacing Values5.1 One by One5.2 Collective replacement6 Conclusion1 IntroductionData manipulation is an elementary component in the data science field that requires the most time, among other things.</description>
    </item>
    
    <item>
      <title>Add new columns</title>
      <link>/2019/03/06/add-new-columns/</link>
      <pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/06/add-new-columns/</guid>
      <description>Table of Content1 Introduction2 Normal Calculation3 If-else statements4 Multiple If-else statements5 Row Sum6 With a defined list7 Conclusion1 IntroductionThere are several ways to generate new variables in Python. Below the most common methods will be shown.
For this post the dataset flight from the statistic platform “Kaggle” was used. A copy of the record is available at https://drive.google.com/open?id=1w3c818UAJW4VVqwYmgDIsn-b8WqcZQzL.</description>
    </item>
    
    <item>
      <title>Data Wrangling</title>
      <link>/2019/03/03/data-wrangling/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/03/data-wrangling/</guid>
      <description>Table of Content1 Introduction2 Loading the libraries and the data3 Overview of the data4 Get some statistics5 Select data5.1 Easy selection5.2 Conditional selection5.3 Set option6 Filter6.1 Normal filter6.2 Filter with a defined list7 Panda’s query8 Group by8.1 with size8.2 with count8.2.1 Count Non - Zero Observations8.3 with sum8.4 with nunique8.5 with mean8.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>Python and R enthusiastic !
Always hungry for more and deeper knowledge..
If you have any questions or comments, just text me: FuchsMichaelAndi1989@gmail.com</description>
    </item>
    
  </channel>
</rss>